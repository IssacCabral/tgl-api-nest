# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type Role {
  id: ID!
  name: String!
  description: String!
  created_at: DateTime!
  updated_at: DateTime!
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

type Game {
  id: ID!
  type: String!
  description: String!
  range: Float!
  price: Float!
  minAndMaxNumber: Float!
  color: String!
  bets: [Bet!]!
  created_at: DateTime!
  updated_at: DateTime!
}

type Bet {
  id: ID!
  user: User!
  game: Game!
  numbers: String!
  created_at: DateTime!
  updated_at: DateTime!
}

type User {
  id: ID!
  name: String!
  cpf: String!
  email: String!
  roles: [Role!]!
  bets: [Bet!]!
  created_at: DateTime!
  updated_at: DateTime!
}

type Cart {
  id: ID!
  minCartValue: Float!
  created_at: DateTime!
  updated_at: DateTime!
}

type AuthType {
  user: User!
  token: String!
}

type UserBetsObj {
  user: User!
  bets: [Bet!]!
}

type CreatedBetsReturn {
  user: User!
  betsPrice: String!
  lastBets: [Bet!]!
}

type Query {
  users(skip: Int = 0, take: Int = 25): [User!]!
  findUser(email: String!): User!
  getMinCartValue: [Cart!]!
  games(skip: Int = 0, take: Int = 25): [Game!]!
  gameById(id: String!): Game!
  findAllUserBets: UserBetsObj!
  findAllBets(skip: Int = 0, take: Int = 25): [Bet!]!
  findOne(id: Int!): Bet!
}

type Mutation {
  createUser(data: CreateUserInput!): User!
  createAdminUser(data: CreateUserInput!): User!
  updateUser(id: String!, updateUserInput: UpdateUserInput!): User!
  removeUser(id: String!): Boolean!
  setMinCartValue(data: SetMinCartValue!): Cart!
  login(data: AuthInput!): AuthType!
  createGame(createGameInput: CreateGameInput!): Game!
  updateGame(id: String!, updateGameInput: UpdateGameInput!): Game!
  removeGame(id: String!): Boolean!
  createBets(createBetInput: CreateBetInput!): CreatedBetsReturn!
}

input CreateUserInput {
  name: String!
  cpf: String!
  email: String!
  password: String!
}

input UpdateUserInput {
  name: String
  cpf: String
  email: String
  password: String
}

input SetMinCartValue {
  minCartValue: Float!
}

input AuthInput {
  email: String!
  password: String!
}

input CreateGameInput {
  type: String!
  description: String!
  range: Float!
  price: Float!
  minAndMaxNumber: Float!
  color: String!
}

input UpdateGameInput {
  type: String
  description: String
  range: Float
  price: Float
  minAndMaxNumber: Float
  color: String
}

input CreateBetInput {
  bets: [BetInput!]!
}

input BetInput {
  numbers: [Float!]!
  gameId: String!
}